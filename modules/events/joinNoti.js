
const fs = require("fs-extra");
const path = require("path");
const { apiCallWithRetry } = require("../../utils/apiHelper");

module.exports.config = {
    name: "joinNoti",
    eventType: ["log:subscribe"],
    version: "1.2.0",
    credits: "TOHIDUL (Enhanced by TOHI-BOT-HUB)",
    description: "Enhanced notification system for bot and user joins with random media support",
    dependencies: {
        "fs-extra": "",
        "path": ""
    }
};

module.exports.onLoad = function () {
    const joinvideoDir = path.join(__dirname, "cache", "joinvideo");
    const randomGifDir = path.join(joinvideoDir, "randomgif");
    if (!fs.existsSync(joinvideoDir)) fs.mkdirSync(joinvideoDir, { recursive: true });
    if (!fs.existsSync(randomGifDir)) fs.mkdirSync(randomGifDir, { recursive: true });
};

module.exports.run = async function({ api, event, Users }) {
    try {
        const { threadID } = event;
        
        // If bot is added
        if (event.logMessageData.addedParticipants.some(i => i.userFbId == api.getCurrentUserID())) {
            try {
                // Set nickname for bot
                const botname = global.config.BOTNAME || "TOHI-BOT";
                await api.changeNickname(`[ ${global.config.PREFIX} ] тАв ${botname}`, threadID, api.getCurrentUserID());
                
                // Get thread info
                const threadInfo = await api.getThreadInfo(threadID);
                const threadName = threadInfo.threadName || "Unknown Group";
                const memberCount = threadInfo.participantIDs.length;
                
                // Enhanced welcome message for bot
                const currentTime = new Date().toLocaleString("bn-BD", {
                    timeZone: "Asia/Dhaka",
                    hour12: false
                });
                
                const msg = `
тХФтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХЧ
  ЁЯдЦ ЁЭЧХЁЭЧвЁЭЧз ЁЭЧФЁЭЧЦЁЭЧзЁЭЧЬЁЭЧйЁЭЧФЁЭЧзЁЭЧШЁЭЧЧ ЁЯдЦ
тХЪтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХЭ

ржЖрж╕рж╕рж╛рж▓рж╛ржорзБ ржЖрж▓рж╛ржЗржХрзБржо рж╕ржмрж╛ржЗ! ЁЯМЯ

ЁЯОЙ ржЖржорж┐ ${botname} ржПржЗ ржЧрзНрж░рзБржкрзЗ ржпрзБржХрзНржд рж╣ржпрж╝рзЗржЫрж┐!

ЁЯУК ржЧрзНрж░рзБржк рждржерзНржп:
тФгтФБ ржЧрзНрж░рзБржк: ${threadName}
тФгтФБ рж╕ржжрж╕рзНржп рж╕ржВржЦрзНржпрж╛: ${memberCount} ржЬржи
тФгтФБ ржЖржорж╛рж░ ржкрзНрж░рж┐ржлрж┐ржХрзНрж╕: ${global.config.PREFIX}
тФЧтФБ ржорзЛржЯ ржХржорж╛ржирзНржб: ${global.client.commands.size}+

ЁЯЪА рж╢рзБрж░рзБ ржХрж░рждрзЗ:
тФгтФБ ${global.config.PREFIX}help - рж╕ржм ржХржорж╛ржирзНржб ржжрзЗржЦрзБржи
тФгтФБ ${global.config.PREFIX}menu - ржХрзНржпрж╛ржЯрж╛ржЧрж░рж┐ ржнрж┐рждрзНрждрж┐ржХ ржорзЗржирзБ
тФЧтФБ ${global.config.PREFIX}info - ржмржЯ рж╕ржорзНржкрж░рзНржХрзЗ ржЬрж╛ржирзБржи

тнР ржмрж┐рж╢рзЗрж╖ рж╕рзБржмрж┐ржзрж╛:
тФгтФБ AI ржЪрзНржпрж╛ржЯ ржУ ржЗржорзЗржЬ ржЬрзЗржирж╛рж░рзЗрж╢ржи
тФгтФБ рж╕рзЛрж╢рзНржпрж╛рж▓ ржорж┐ржбрж┐ржпрж╝рж╛ ржбрж╛ржЙржирж▓рзЛржбрж╛рж░
тФгтФБ ржЧрзНрж░рзБржк ржорзНржпрж╛ржирзЗржЬржорзЗржирзНржЯ ржЯрзБрж▓рж╕
тФЧтФБ ржЧрзЗржорж╕ ржУ ржПржирзНржЯрж╛рж░ржЯрзЗржЗржиржорзЗржирзНржЯ

ЁЯХТ ржпрзБржХрзНржд рж╣ржУржпрж╝рж╛рж░ рж╕ржоржпрж╝: ${currentTime}

тЛЖтЬжтЛЖтОптОптОптОптОптОптОптОптОптЛЖтЬжтЛЖ
ЁЯЪй Made by TOHIDUL
тЛЖтЬжтЛЖтОптОптОптОптОптОптОптОптОптЛЖтЬжтЛЖ`;

                // Try to send with video attachment
                const videoPath = path.join(__dirname, "cache", "ullash.mp4");
                if (fs.existsSync(videoPath)) {
                    return api.sendMessage({ 
                        body: msg, 
                        attachment: fs.createReadStream(videoPath) 
                    }, threadID);
                } else {
                    return api.sendMessage(msg, threadID);
                }
            } catch (botJoinError) {
                console.error('Bot join notification error:', botJoinError);
                
                // Fallback simple message
                const fallbackMsg = `ЁЯдЦ ${global.config.BOTNAME || "TOHI-BOT"} рж╕ржлрж▓ржнрж╛ржмрзЗ ржЧрзНрж░рзБржкрзЗ ржпрзБржХрзНржд рж╣ржпрж╝рзЗржЫрзЗ!\n\n${global.config.PREFIX}help рж▓рж┐ржЦрзЗ ржХржорж╛ржирзНржб ржжрзЗржЦрзБржиред\n\nЁЯЪй Made by TOHIDUL`;
                return api.sendMessage(fallbackMsg, threadID);
            }
        }

        // For new member(s)
        try {
            const { threadName, participantIDs } = await api.getThreadInfo(threadID);
            const threadData = global.data.threadData.get(parseInt(threadID)) || {};
            
            // Enhanced default join message template
            const joinMsgTemplate = (typeof threadData.customJoin == "undefined")
                ? `
тХФтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХЧ
  ЁЯОК ЁЭЧкЁЭЧШЁЭЧЯЁЭЧЦЁЭЧвЁЭЧаЁЭЧШ ЁЭЧбЁЭЧШЁЭЧк ЁЭЧаЁЭЧШЁЭЧаЁЭЧХЁЭЧШЁЭЧе ЁЯОК
тХЪтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХЭ

ржЖрж╕рж╕рж╛рж▓рж╛ржорзБ ржЖрж▓рж╛ржЗржХрзБржо! ЁЯМЯ

ЁЯОЙ рж╕рзНржмрж╛ржЧрждржо {name}!

ЁЯПа ржЖржкржирж┐ ржПржЦржи "{threadName}" ржЧрзНрж░рзБржкрзЗрж░ рж╕ржжрж╕рзНржп!

ЁЯУК ржЧрзНрж░рзБржк рждржерзНржп:
тФгтФБ ржЖржкржирж┐ {memberNumber} ржиржВ рж╕ржжрж╕рзНржп
тФгтФБ ржЧрзНрж░рзБржкрзЗ ржмржЯ рж╕рзБржмрж┐ржзрж╛ ржЖржЫрзЗ
тФгтФБ ржкрзНрж░рж┐ржлрж┐ржХрзНрж╕: ${global.config.PREFIX}
тФЧтФБ ${global.config.PREFIX}help ржжрж┐ржпрж╝рзЗ ржХржорж╛ржирзНржб ржжрзЗржЦрзБржи

ЁЯОп ржЧрзНрж░рзБржк ржирж┐ржпрж╝ржорж╛ржмрж▓рзА ржорзЗржирзЗ ржЪрж▓рзБржи
ЁЯТм рж╕ржмрж╛рж░ рж╕рж╛ржерзЗ ржнрж╛рж▓рзЛ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи
ЁЯдЭ ржПржХрж╕рж╛ржерзЗ ржоржЬрж╛ ржХрж░рзБржи!

ржЖржкржирж╛ржХрзЗ ржЖржмрж╛рж░ржУ рж╕рзНржмрж╛ржЧрждржо! тЭдя╕П

тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтЬжтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА
ЁЯЪй TOHI-BOT TEAM
тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтЬжтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА`
                : threadData.customJoin;

            const memJoin = event.logMessageData.addedParticipants;
            let nameArray = [], mentions = [];
            let memberNumberArray = [];

            for (let i = 0; i < memJoin.length; i++) {
                const user = memJoin[i];
                nameArray.push(user.fullName);
                mentions.push({ tag: user.fullName, id: user.userFbId });
                memberNumberArray.push(participantIDs.length - i);
            }

            // Replace variables in template
            let msg = joinMsgTemplate
                .replace(/\{name}/g, nameArray.join(", "))
                .replace(/\{memberNumber}/g, memberNumberArray.join(", "))
                .replace(/\{threadName}/g, threadName);

            // Select random gif/video/image if exists
            const gifDir = path.join(__dirname, "cache", "joinvideo", "randomgif");
            let files = [];
            if (fs.existsSync(gifDir)) {
                files = fs.readdirSync(gifDir).filter(file => {
                    const ext = path.extname(file).toLowerCase();
                    return ['.gif', '.mp4', '.jpg', '.jpeg', '.png'].includes(ext);
                });
            }
            
            let attachment;
            if (files.length > 0) {
                const randomFile = files[Math.floor(Math.random() * files.length)];
                const filePath = path.join(gifDir, randomFile);
                if (fs.existsSync(filePath)) {
                    attachment = fs.createReadStream(filePath);
                }
            }

            return api.sendMessage({ body: msg, attachment, mentions }, threadID);

        } catch (memberJoinError) {
            console.error('Member join notification error:', memberJoinError);
            
            // Fallback notification for new members
            const memJoin = event.logMessageData.addedParticipants;
            const nameArray = memJoin.map(user => user.fullName);
            
            const fallbackMsg = `ЁЯОЙ рж╕рзНржмрж╛ржЧрждржо ${nameArray.join(', ')}!\n\nржЖржорж╛ржжрзЗрж░ ржЧрзНрж░рзБржкрзЗ ржпрзЛржЧ ржжрзЗржУржпрж╝рж╛рж░ ржЬржирзНржп ржзржирзНржпржмрж╛ржжред ${global.config.PREFIX}help рж▓рж┐ржЦрзЗ ржмржЯ ржХржорж╛ржирзНржб ржжрзЗржЦрзБржиред\n\nЁЯЪй Made by TOHIDUL`;
            
            return api.sendMessage(fallbackMsg, threadID);
        }
    } catch (error) {
        console.error('JoinNoti main error:', error);
    }
};
