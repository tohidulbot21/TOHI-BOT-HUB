
module.exports.config = {
  name: "leave",
  eventType: ["log:unsubscribe"],
  version: "6.0.0",
  credits: "TOHI-BOT-HUB (Anti-Out Integrated by TOHIDUL)",
  description: "ЁЯОн Enhanced leave notification with integrated Anti-Out system",
  dependencies: {
    "fs-extra": "",
    "path": ""
  }
};

const fs = require('fs-extra');
const path = require('path');

// Stylish text function
function stylishText(text, style = "default") {
  const styles = {
    default: `тЬи ${text} тЬи`,
    title: `ЁЯОн ${text} ЁЯОн`,
    subtitle: `ЁЯМЯ ${text} ЁЯМЯ`,
    warning: `тЪая╕П ${text} тЪая╕П`,
    success: `тЬЕ ${text} тЬЕ`,
    error: `тЭМ ${text} тЭМ`,
    bangla: `ЁЯЗзЁЯЗй ${text} ЁЯЗзЁЯЗй`,
    love: `ЁЯТЦ ${text} ЁЯТЦ`,
    fire: `ЁЯФе ${text} ЁЯФе`,
    boss: `ЁЯСС ${text} ЁЯСС`,
    antiout: `ЁЯЫбя╕П ${text} ЁЯЫбя╕П`
  };
  return styles[style] || styles.default;
}

// Handle anti-out commands
module.exports.handleEvent = async function({ api, event, Threads }) {
  const { body = "", threadID, senderID } = event;
  
  // Check for anti-out toggle commands
  if (body.toLowerCase() === "/antiout on" || body.toLowerCase() === "antiout on") {
    const info = await api.getThreadInfo(threadID);
    if (!info.adminIDs.some(item => item.id == api.getCurrentUserID())) {
      return api.sendMessage('тЭМ ржмржЯржХрзЗ ржЧрзНрж░рзБржк ржПржбржорж┐ржи ржмрж╛ржирж╛ржи Anti-Out ржЪрж╛рж▓рзБ ржХрж░рж╛рж░ ржЬржирзНржпред', threadID);
    }
    
    if (!info.adminIDs.some(item => item.id == senderID)) {
      return api.sendMessage('тЭМ рж╢рзБржзрзБржорж╛рждрзНрж░ ржЧрзНрж░рзБржк ржПржбржорж┐ржи Anti-Out ржЪрж╛рж▓рзБ/ржмржирзНржз ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржиред', threadID);
    }

    const data = (await Threads.getData(threadID)).data || {};
    data["antiout"] = true;
    await Threads.setData(threadID, { data });
    global.data.threadData.set(parseInt(threadID), data);

    const onMessage = `
${stylishText("ANTI-OUT ржЪрж╛рж▓рзБ рж╣ржпрж╝рзЗржЫрзЗ!", "antiout")}

ЁЯФТ ржПржЦржи ржХрзЗржЙ ржЧрзНрж░рзБржк ржЫрж╛ржбрж╝рж▓рзЗ ржЖржмрж╛рж░ ржПржб ржХрж░рж╛ рж╣ржмрзЗред
ЁЯТк ржкрж╛рж▓рж╛ржирзЛрж░ ржЙржкрж╛ржпрж╝ ржирзЗржЗ!

ЁЯЪй Made by TOHIDUL`;

    return api.sendMessage(onMessage, threadID);
  }

  if (body.toLowerCase() === "/antiout off" || body.toLowerCase() === "antiout off") {
    const info = await api.getThreadInfo(threadID);
    if (!info.adminIDs.some(item => item.id == senderID)) {
      return api.sendMessage('тЭМ рж╢рзБржзрзБржорж╛рждрзНрж░ ржЧрзНрж░рзБржк ржПржбржорж┐ржи Anti-Out ржЪрж╛рж▓рзБ/ржмржирзНржз ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржиред', threadID);
    }

    const data = (await Threads.getData(threadID)).data || {};
    data["antiout"] = false;
    await Threads.setData(threadID, { data });
    global.data.threadData.set(parseInt(threadID), data);

    const offMessage = `
${stylishText("ANTI-OUT ржмржирзНржз рж╣ржпрж╝рзЗржЫрзЗ!", "warning")}

ЁЯФУ ржПржЦржи ржХрзЗржЙ ржЪрж╛ржЗрж▓рзЗ ржЧрзНрж░рзБржк ржЫрзЗржбрж╝рзЗ ржпрзЗрждрзЗ ржкрж╛рж░ржмрзЗред
ЁЯШФ ржЖрж░ ржлрзЗрж░ржд ржЖржирж╛ рж╣ржмрзЗ ржирж╛ред

ЁЯЪй Made by TOHIDUL`;

    return api.sendMessage(offMessage, threadID);
  }
};

// Main leave notification function
module.exports.run = async function({ api, event, Users, Threads }) {
  try {
    const { threadID } = event;
    const leftParticipantFbId = event.logMessageData.leftParticipantFbId;

    // Don't process if bot itself left
    if (leftParticipantFbId == api.getCurrentUserID()) return;

    // Get thread data for anti-out setting
    let data = (await Threads.getData(threadID)).data || {};
    const isAntiOutEnabled = data.antiout === true;

    // Get user info
    const userInfo = {
      id: leftParticipantFbId,
      name: global.data.userName.get(leftParticipantFbId) || await Users.getNameUser(leftParticipantFbId) || "Unknown User"
    };

    // Detect leave type
    const isKicked = event.author !== leftParticipantFbId;
    const isSelfLeave = event.author === leftParticipantFbId;

    // Current time in Bangladesh
    const currentTime = new Date().toLocaleString("bn-BD", {
      timeZone: "Asia/Dhaka",
      hour12: false
    });

    // Handle Anti-Out for self-leave
    if (isSelfLeave && isAntiOutEnabled) {
      // Try to re-add user
      api.addUserToGroup(leftParticipantFbId, threadID, async (error, info) => {
        if (error) {
          console.error(`Failed to re-add user ${leftParticipantFbId}:`, error);
          
          // Send failure message
          const failureMsg = `
${stylishText("ржЧрзНрж░рзБржкрзЗ ржерж╛ржХрж╛рж░ ржпрзЛржЧрзНржпрждрж╛ ржирзЗржЗ ржжрзЗржЦрзЗ рж▓рж┐ржн ржжрж┐ржЫрж┐рж▓рзЛ!", "fire")}

ЁЯШВ ${userInfo.name} ржкрж╛рж▓рж╛ржирзЛрж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзЗржЫрзЗ ржХрж┐ржирзНрждрзБ ржмрзНржпрж░рзНрже!
тЭМ ржлрзЗрж░ржд ржЖржирж╛ ржпрж╛ржпрж╝ржирж┐ - рж╣ржпрж╝рждрзЛ ржмржЯржХрзЗ ржмрзНрж▓ржХ ржХрж░рзЗржЫрзЗред

ЁЯЪй Made by TOHIDUL`;

          return api.sendMessage(failureMsg, threadID);
        } else {
          // Send success message with video
          const successMsg = `
${stylishText("ржЧрзНрж░рзБржкрзЗ ржерж╛ржХрж╛рж░ ржпрзЛржЧрзНржпрждрж╛ ржирзЗржЗ ржжрзЗржЦрзЗ рж▓рж┐ржн ржжрж┐ржЫрж┐рж▓рзЛ, ржХрж┐ржирзНрждрзБ ржЖржорж┐ рждрзЛ ржЖржЫрж┐тАФржпрзЗрждрзЗ ржжрж┐ржмрзЛ ржирж╛!", "boss")}

ЁЯШО ${userInfo.name} ржкрж╛рж▓рж╛рждрзЗ ржЪрзЗржпрж╝рзЗржЫрж┐рж▓рзЛ ржХрж┐ржирзНрждрзБ ржзрж░рзЗ ржЖржирж▓рж╛ржо!
ЁЯФТ Anti-Out рж╕рж┐рж╕рзНржЯрзЗржо ржХрж╛ржЬ ржХрж░рзЗржЫрзЗред

ЁЯЪй Made by TOHIDUL`;

          try {
            const videoPath = path.join(__dirname, 'cache', 'leave', 'Pakad MC Meme Template - Pakad Le BKL Ke Meme - Chodu CID Meme.mp4');
            
            let attachment = null;
            if (fs.existsSync(videoPath)) {
              const stats = fs.statSync(videoPath);
              if (stats.size > 1000) {
                attachment = fs.createReadStream(videoPath);
              }
            }

            const messageData = { body: successMsg };
            if (attachment) {
              messageData.attachment = attachment;
            }

            return api.sendMessage(messageData, threadID);
          } catch (videoError) {
            return api.sendMessage(successMsg, threadID);
          }
        }
      });
      return;
    }

    // Handle normal leave notifications when anti-out is OFF or user was kicked
    if (!isAntiOutEnabled || isKicked) {
      let message;
      
      if (isKicked) {
        // User was kicked
        message = `
${stylishText("ржПржХржЬржи ржЧрзНрж░рзБржкрзЗрж░ рж╕ржорзНржорж╛ржирж┐ржд ржЬржШржирзНржп ржмрзНржпржХрзНрждрж┐ ржХрж┐ржХ ржЦрзЗржпрж╝рзЗржЫрзЗ!", "warning")}

ЁЯж╡ ${userInfo.name} ржХрзЗ ржХрж┐ржХ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред
ЁЯШФ ржЖрж░ ржерж╛ржХрждрзЗ ржкрж╛рж░рж▓рзЛ ржирж╛ред

ЁЯЪй Made by TOHIDUL`;
      } else {
        // Self leave when anti-out is off
        message = `
${stylishText("ржПржХржЬржи ржЧрзНрж░рзБржкрзЗрж░ рж╕ржорзНржорж╛ржирж┐ржд ржЬржШржирзНржп ржмрзНржпржХрзНрждрж┐ рж▓рж┐ржн ржирж┐ржпрж╝рзЗ ржирж┐рж▓рзЛ!", "warning")}

ЁЯШФ ${userInfo.name} ржирж┐ржЬрзЗржЗ ржЧрзНрж░рзБржк ржЫрзЗржбрж╝рзЗ ржЧрзЗржЫрзЗред
ЁЯФУ Anti-Out ржмржирзНржз ржерж╛ржХрж╛ржпрж╝ ржлрзЗрж░ржд ржЖржирж╛ рж╣ржпрж╝ржирж┐ред

ЁЯЪй Made by TOHIDUL`;
      }

      return api.sendMessage(message, threadID);
    }

  } catch (error) {
    console.error('LeaveNoti integrated error:', error.message);
    
    try {
      const leftParticipantFbId = event.logMessageData.leftParticipantFbId;
      const name = global.data.userName.get(leftParticipantFbId) || "Unknown User";

      const fallbackMessage = `
${stylishText("ржПржХржЬржи ржЧрзНрж░рзБржкрзЗрж░ рж╕ржорзНржорж╛ржирж┐ржд ржЬржШржирзНржп ржмрзНржпржХрзНрждрж┐ рж▓рж┐ржн ржирж┐ржпрж╝рзЗ ржирж┐рж▓рзЛ!", "warning")}

ЁЯШФ ${name} ржЪрж▓рзЗ ржЧрзЗржЫрзЗред

ЁЯЪй Made by TOHIDUL`;

      return api.sendMessage(fallbackMessage, event.threadID);
    } catch (fallbackError) {
      console.error('Fallback message failed:', fallbackError.message);
      return;
    }
  }
};
