
const fs = require('fs');
const path = require('path');

module.exports = {
  config: {
    name: "pendingApproval",
    eventType: ["message", "log:subscribe"],
    version: "1.1.0",
    credits: "TOHIDUL (Enhanced by TOHI-BOT-HUB)",
    description: "Enhanced group approval system with detailed notifications"
  },
  run: async function({ api, event }) {
    try {
      const configPath = path.join(__dirname, '../../config.json');
      const config = require(configPath);
      
      // Initialize APPROVAL object if it doesn't exist
      if (!config.APPROVAL) {
        config.APPROVAL = {
          approvedGroups: [],
          pendingGroups: [],
          rejectedGroups: []
        };
        fs.writeFileSync(configPath, JSON.stringify(config, null, 2));
      }

      // If bot is added to a new group
      if (event.type === "log:subscribe" && 
          event.logMessageData.addedParticipants.some(i => i.userFbId == api.getCurrentUserID())) {
        
        const threadID = event.threadID;
        
        // Add to pending if not already approved
        if (!config.APPROVAL.approvedGroups.includes(threadID)) {
          if (!config.APPROVAL.pendingGroups.includes(threadID)) {
            config.APPROVAL.pendingGroups.push(threadID);
            fs.writeFileSync(configPath, JSON.stringify(config, null, 2));
          }
          
          // Send notification to admin only
          const adminIds = global.config.ADMINBOT || [];
          if (adminIds.length > 0) {
            try {
              const threadInfo = await api.getThreadInfo(threadID);
              const currentTime = new Date().toLocaleString("bn-BD", {
                timeZone: "Asia/Dhaka",
                hour12: false
              });
              
              const adminNotificationMsg = `
тХФтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХЧ
  ЁЯФФ ЁЭЧбЁЭЧШЁЭЧк ЁЭЧЪЁЭЧеЁЭЧвЁЭЧиЁЭЧг ЁЭЧгЁЭЧШЁЭЧбЁЭЧЧЁЭЧЬЁЭЧбЁЭЧЪ ЁЯФФ
тХЪтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХЭ

ЁЯдЦ ржмржЯ ржирждрзБржи ржЧрзНрж░рзБржкрзЗ ржпрзБржХрзНржд рж╣ржпрж╝рзЗржЫрзЗ!

ЁЯУК ржЧрзНрж░рзБржк рждржерзНржп:
тФгтФБ ржирж╛ржо: ${threadInfo.threadName}
тФгтФБ ржЖржЗржбрж┐: ${threadID}
тФгтФБ рж╕ржжрж╕рзНржп: ${threadInfo.participantIDs.length} ржЬржи
тФгтФБ рж╕ржоржпрж╝: ${currentTime}
тФЧтФБ рж╕рзНржЯрзНржпрж╛ржЯрж╛рж╕: ржЕржирзБржорзЛржжржирзЗрж░ ржЕржкрзЗржХрзНрж╖рж╛ржпрж╝

тЪая╕П ржПржЗ ржЧрзНрж░рзБржкрзЗ ржмржЯ ржПржЦржирзЛ рж╕ржХрзНрж░рж┐ржпрж╝ ржиржпрж╝ред

ЁЯОп ржЕржирзБржорзЛржжржирзЗрж░ ржЬржирзНржп:
тФгтФБ /approve ${threadID} - ржПржЗ ржЧрзНрж░рзБржк ржЕржирзБржорзЛржжржи
тФгтФБ /reject ${threadID} - ржПржЗ ржЧрзНрж░рзБржк ржкрзНрж░рждрзНржпрж╛ржЦрзНржпрж╛ржи
тФгтФБ /pending - рж╕ржм ржкрзЗржирзНржбрж┐ржВ ржЧрзНрж░рзБржк ржжрзЗржЦрзБржи
тФЧтФБ /approved - ржЕржирзБржорзЛржжрж┐ржд ржЧрзНрж░рзБржк ржжрзЗржЦрзБржи

ЁЯУЛ ржжрзНрж░рзБржд ржЕржирзБржорзЛржжржи: /approve ${threadID}

тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтЬжтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА
ЁЯЪй Made by TOHIDUL
тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтЬжтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА`;

              for (const adminId of adminIds) {
                try {
                  await api.sendMessage(adminNotificationMsg, adminId);
                } catch (adminMsgError) {
                  console.error(`Failed to send admin notification to ${adminId}:`, adminMsgError);
                }
              }
            } catch (threadInfoError) {
              console.error('Error getting thread info for pending approval:', threadInfoError);
            }
          }
          return; // Don't send any message to the group
        }
      }

      // Handle approval/rejection commands from admin
      if (event.type === "message" && event.body) {
        const args = event.body.trim().split(' ');
        const command = args[0].toLowerCase();
        const adminIds = global.config.ADMINBOT || [];
        
        if (!adminIds.includes(event.senderID)) return;

        const currentTime = new Date().toLocaleString("bn-BD", {
          timeZone: "Asia/Dhaka",
          hour12: false
        });

        switch (command) {
          case '/approve':
            const approveThreadID = args[1] || event.threadID;
            
            if (config.APPROVAL.pendingGroups.includes(approveThreadID)) {
              // Move from pending to approved
              config.APPROVAL.pendingGroups = config.APPROVAL.pendingGroups.filter(id => id !== approveThreadID);
              config.APPROVAL.approvedGroups.push(approveThreadID);
              
              fs.writeFileSync(configPath, JSON.stringify(config, null, 2));
              
              // Send confirmation to admin
              const approvalConfirmMsg = `
тХФтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХЧ
  тЬЕ ЁЭЧЪЁЭЧеЁЭЧвЁЭЧиЁЭЧг ЁЭЧФЁЭЧгЁЭЧгЁЭЧеЁЭЧвЁЭЧйЁЭЧШЁЭЧЧ тЬЕ
тХЪтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХЭ

ЁЯОЙ ржЧрзНрж░рзБржк рж╕ржлрж▓ржнрж╛ржмрзЗ ржЕржирзБржорзЛржжрж┐ржд рж╣ржпрж╝рзЗржЫрзЗ!

ЁЯУК рждржерзНржп:
тФгтФБ ржЧрзНрж░рзБржк ржЖржЗржбрж┐: ${approveThreadID}
тФгтФБ ржЕржирзБржорзЛржжржирзЗрж░ рж╕ржоржпрж╝: ${currentTime}
тФгтФБ рж╕рзНржЯрзНржпрж╛ржЯрж╛рж╕: рж╕ржХрзНрж░рж┐ржпрж╝ тЬЕ
тФЧтФБ ржмржЯ ржХржорж╛ржирзНржб: ржПржЦржи ржХрж╛рж░рзНржпржХрж░

ЁЯдЦ ржмржЯ ржПржЦржи ржПржЗ ржЧрзНрж░рзБржкрзЗ рж╕ржорзНржкрзВрж░рзНржг рж╕ржХрзНрж░рж┐ржпрж╝!

тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтЬжтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА
ЁЯЪй Made by TOHIDUL
тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтЬжтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА`;

              api.sendMessage(approvalConfirmMsg, event.senderID);

              // Send activation message to the approved group
              try {
                const threadInfo = await api.getThreadInfo(approveThreadID);
                const activationMsg = `
тХФтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХЧ
  ЁЯОК ЁЭЧХЁЭЧвЁЭЧз ЁЭЧФЁЭЧЦЁЭЧзЁЭЧЬЁЭЧйЁЭЧФЁЭЧзЁЭЧШЁЭЧЧ ЁЯОК
тХЪтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХЭ

ЁЯдЦ ${global.config.BOTNAME || 'TOHI-BOT'} ржПржЦржи рж╕ржХрзНрж░рж┐ржпрж╝!

ЁЯОЙ ржПржЗ ржЧрзНрж░рзБржк рж╕ржлрж▓ржнрж╛ржмрзЗ ржЕржирзБржорзЛржжрж┐ржд рж╣ржпрж╝рзЗржЫрзЗ!
тЬи рж╕ржм ржХржорж╛ржирзНржб ржПржЦржи ржХрж╛ржЬ ржХрж░ржмрзЗред

ЁЯЪА рж╢рзБрж░рзБ ржХрж░рждрзЗ:
тФгтФБ ${global.config.PREFIX}help - рж╕ржм ржХржорж╛ржирзНржб ржжрзЗржЦрзБржи
тФгтФБ ${global.config.PREFIX}menu - ржХрзНржпрж╛ржЯрж╛ржЧрж░рж┐ ржорзЗржирзБ
тФгтФБ ${global.config.PREFIX}info - ржмржЯ рждржерзНржп
тФЧтФБ ${global.config.PREFIX}admin - ржПржбржорж┐ржи рждрж╛рж▓рж┐ржХрж╛

ЁЯУК ржЧрзНрж░рзБржк рждржерзНржп:
тФгтФБ ржЧрзНрж░рзБржк: ${threadInfo.threadName}
тФгтФБ рж╕ржжрж╕рзНржп: ${threadInfo.participantIDs.length} ржЬржи
тФгтФБ ржкрзНрж░рж┐ржлрж┐ржХрзНрж╕: ${global.config.PREFIX}
тФЧтФБ ржЕржирзБржорзЛржжржирзЗрж░ рж╕ржоржпрж╝: ${currentTime}

ЁЯОп ржирж┐ржпрж╝ржорж╛ржмрж▓рзА ржорзЗржирзЗ ржЪрж▓рзБржи ржПржмржВ ржЙржкржнрзЛржЧ ржХрж░рзБржи!

тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтЬжтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА
ЁЯЪй Made by TOHIDUL
тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтЬжтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА`;

                api.sendMessage(activationMsg, approveThreadID);
              } catch (activationError) {
                console.error('Error sending activation message:', activationError);
              }

            } else if (config.APPROVAL.approvedGroups.includes(approveThreadID)) {
              api.sendMessage("тЪая╕П ржПржЗ ржЧрзНрж░рзБржк ржЗрждрж┐ржоржзрзНржпрзЗ ржЕржирзБржорзЛржжрж┐ржд!", event.senderID);
            } else {
              api.sendMessage("тЭМ ржПржЗ ржЧрзНрж░рзБржк ржкрзЗржирзНржбрж┐ржВ рждрж╛рж▓рж┐ржХрж╛ржпрж╝ ржирзЗржЗ!", event.senderID);
            }
            break;

          case '/reject':
            const rejectThreadID = args[1] || event.threadID;
            
            if (config.APPROVAL.pendingGroups.includes(rejectThreadID)) {
              // Move from pending to rejected
              config.APPROVAL.pendingGroups = config.APPROVAL.pendingGroups.filter(id => id !== rejectThreadID);
              if (!config.APPROVAL.rejectedGroups) config.APPROVAL.rejectedGroups = [];
              config.APPROVAL.rejectedGroups.push(rejectThreadID);
              
              fs.writeFileSync(configPath, JSON.stringify(config, null, 2));
              
              const rejectionMsg = `
тХФтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХЧ
  тЭМ ЁЭЧЪЁЭЧеЁЭЧвЁЭЧиЁЭЧг ЁЭЧеЁЭЧШЁЭЧЭЁЭЧШЁЭЧЦЁЭЧзЁЭЧШЁЭЧЧ тЭМ
тХЪтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХЭ

ЁЯЪл ржЧрзНрж░рзБржк ржкрзНрж░рждрзНржпрж╛ржЦрзНржпрж╛ржи ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред

ЁЯУК рждржерзНржп:
тФгтФБ ржЧрзНрж░рзБржк ржЖржЗржбрж┐: ${rejectThreadID}
тФгтФБ ржкрзНрж░рждрзНржпрж╛ржЦрзНржпрж╛ржирзЗрж░ рж╕ржоржпрж╝: ${currentTime}
тФгтФБ рж╕рзНржЯрзНржпрж╛ржЯрж╛рж╕: ржкрзНрж░рждрзНржпрж╛ржЦрзНржпрж╛ржд тЭМ
тФЧтФБ ржмржЯ ржХржорж╛ржирзНржб: ржирж┐рж╖рзНржХрзНрж░рж┐ржпрж╝

тЪая╕П ржПржЗ ржЧрзНрж░рзБржкрзЗ ржмржЯ ржХрж╛ржЬ ржХрж░ржмрзЗ ржирж╛ред

тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтЬжтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА
ЁЯЪй Made by TOHIDUL
тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтЬжтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА`;

              api.sendMessage(rejectionMsg, event.senderID);
            } else {
              api.sendMessage("тЭМ ржПржЗ ржЧрзНрж░рзБржк ржкрзЗржирзНржбрж┐ржВ рждрж╛рж▓рж┐ржХрж╛ржпрж╝ ржирзЗржЗ!", event.senderID);
            }
            break;

          case '/pending':
            const pendingGroups = config.APPROVAL.pendingGroups || [];
            if (pendingGroups.length === 0) {
              api.sendMessage("тЬЕ ржХрзЛржирзЛ ржЧрзНрж░рзБржк ржкрзЗржирзНржбрж┐ржВ ржирзЗржЗ!", event.senderID);
            } else {
              let pendingMsg = `
тХФтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХЧ
  ЁЯУЛ ЁЭЧгЁЭЧШЁЭЧбЁЭЧЧЁЭЧЬЁЭЧбЁЭЧЪ ЁЭЧЪЁЭЧеЁЭЧвЁЭЧиЁЭЧгЁЭЧж ЁЯУЛ
тХЪтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХЭ

ЁЯФД ржЕржирзБржорзЛржжржирзЗрж░ ржЕржкрзЗржХрзНрж╖рж╛ржпрж╝ рж░ржпрж╝рзЗржЫрзЗ: ${pendingGroups.length} ржЯрж┐ ржЧрзНрж░рзБржк

`;
              for (let i = 0; i < pendingGroups.length; i++) {
                try {
                  const threadInfo = await api.getThreadInfo(pendingGroups[i]);
                  pendingMsg += `${i + 1}. ${threadInfo.threadName}\n   ID: ${pendingGroups[i]}\n   рж╕ржжрж╕рзНржп: ${threadInfo.participantIDs.length} ржЬржи\n\n`;
                } catch {
                  pendingMsg += `${i + 1}. Unknown Group\n   ID: ${pendingGroups[i]}\n\n`;
                }
              }
              
              pendingMsg += `тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтЬжтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА\nЁЯЪй Made by TOHIDUL\nтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтЬжтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА`;
              api.sendMessage(pendingMsg, event.senderID);
            }
            break;

          case '/approved':
            const approvedGroups = config.APPROVAL.approvedGroups || [];
            if (approvedGroups.length === 0) {
              api.sendMessage("тЭМ ржХрзЛржирзЛ ржЧрзНрж░рзБржк ржЕржирзБржорзЛржжрж┐ржд ржирзЗржЗ!", event.senderID);
            } else {
              let approvedMsg = `
тХФтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХЧ
  тЬЕ ЁЭЧФЁЭЧгЁЭЧгЁЭЧеЁЭЧвЁЭЧйЁЭЧШЁЭЧЧ ЁЭЧЪЁЭЧеЁЭЧвЁЭЧиЁЭЧгЁЭЧж тЬЕ
тХЪтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХЭ

ЁЯОЙ ржЕржирзБржорзЛржжрж┐ржд ржЧрзНрж░рзБржк: ${approvedGroups.length} ржЯрж┐

`;
              for (let i = 0; i < Math.min(approvedGroups.length, 10); i++) {
                try {
                  const threadInfo = await api.getThreadInfo(approvedGroups[i]);
                  approvedMsg += `${i + 1}. ${threadInfo.threadName}\n   ID: ${approvedGroups[i]}\n   рж╕ржжрж╕рзНржп: ${threadInfo.participantIDs.length} ржЬржи\n\n`;
                } catch {
                  approvedMsg += `${i + 1}. Unknown Group\n   ID: ${approvedGroups[i]}\n\n`;
                }
              }
              
              if (approvedGroups.length > 10) {
                approvedMsg += `... ржПржмржВ ржЖрж░рзЛ ${approvedGroups.length - 10} ржЯрж┐ ржЧрзНрж░рзБржк\n\n`;
              }
              
              approvedMsg += `тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтЬжтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА\nЁЯЪй Made by TOHIDUL\nтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтЬжтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА`;
              api.sendMessage(approvedMsg, event.senderID);
            }
            break;
        }
      }
    } catch (error) {
      console.error('PendingApproval Error:', error);
    }
  }
};
