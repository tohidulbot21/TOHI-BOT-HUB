module.exports.config = {
    name: "approve",
    version: "3.0.0",
    permission: 2, // Only bot owner can use this command
    usePrefix: true,
    credits: "TOHI-BOT-HUB",
    description: "Auto-approve system for groups. Bot automatically approves when added to groups.",
    commandCategory: "Admin",
    usages: "approve [on|off|status|list]",
    cooldowns: 5
};

// Set your Facebook UID here (only you, the bot owner, can use this command)
const OWNER_ID = "100092006324917"; // Change this to your Facebook ID

module.exports.run = async function ({ api, event, args }) {
    if (event.senderID !== OWNER_ID) {
        return api.sendMessage(`тЫФя╕П ржПржЗ ржХржорж╛ржирзНржбржЯрж┐ рж╢рзБржзрзБ ржмржЯ ржорж╛рж▓рж┐ржХ (${OWNER_ID}) ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржи!`, event.threadID, event.messageID);
    }

    const { threadID, messageID } = event;
    const { configPath } = global.client;
    const { writeFileSync } = global.nodemodule["fs-extra"];
    delete require.cache[require.resolve(configPath)];
    var config = require(configPath);

    // Initialize AUTO_APPROVE system if not exists
    if (!config.AUTO_APPROVE) {
        config.AUTO_APPROVE = {
            enabled: true,
            approvedGroups: [],
            autoApproveMessage: true
        };
    }

    try {
        const command = (args[0] || "status").toLowerCase();

        switch (command) {
            case "on":
            case "enable": {
                config.AUTO_APPROVE.enabled = true;
                writeFileSync(configPath, JSON.stringify(config, null, 2), 'utf8');

                const enableMsg = `
тХФтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХЧ
  тЬЕ ЁЭЧФЁЭЧиЁЭЧзЁЭЧв ЁЭЧФЁЭЧгЁЭЧгЁЭЧеЁЭЧвЁЭЧйЁЭЧШ ЁЭЧвЁЭЧб тЬЕ
тХЪтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХЭ

ЁЯдЦ ржЕржЯрзЛ ржПржкрзНрж░рзБржн рж╕рж┐рж╕рзНржЯрзЗржо ржЪрж╛рж▓рзБ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ!

ЁЯУЛ ржмрзИрж╢рж┐рж╖рзНржЯрзНржп:
тФгтФБ ржмржЯ ржпрзЗржХрзЛржирзЛ ржЧрзНрж░рзБржкрзЗ ржпрзБржХрзНржд рж╣рж▓рзЗ ржЕржЯрзЛ ржПржкрзНрж░рзБржн
тФгтФБ рждрж╛рзОржХрзНрж╖ржгрж┐ржХ ржХржорж╛ржирзНржб ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕
тФгтФБ рж╕рзНржмржпрж╝ржВржХрзНрж░рж┐ржпрж╝ рж╕рзНржмрж╛ржЧржд ржмрж╛рж░рзНрждрж╛
тФЧтФБ ржХрзЛржирзЛ ржорзНржпрж╛ржирзБржпрж╝рж╛рж▓ ржПржкрзНрж░рзБржнрж╛рж▓рзЗрж░ ржкрзНрж░ржпрж╝рзЛржЬржи ржирзЗржЗ

ЁЯОп ржПржЦржи ржмржЯ ржпрзЗржХрзЛржирзЛ ржЧрзНрж░рзБржкрзЗ ржпрзБржХрзНржд рж╣рж▓рзЗ рждрж╛рзОржХрзНрж╖ржгрж┐ржХ ржХрж╛ржЬ рж╢рзБрж░рзБ ржХрж░ржмрзЗ!

тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтЬжтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА
ЁЯЪй Made by TOHIDUL
тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтЬжтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА`;

                return api.sendMessage(enableMsg, threadID, messageID);
            }

            case "off":
            case "disable": {
                config.AUTO_APPROVE.enabled = false;
                writeFileSync(configPath, JSON.stringify(config, null, 2), 'utf8');

                const disableMsg = `
тХФтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХЧ
  тЭМ ЁЭЧФЁЭЧиЁЭЧзЁЭЧв ЁЭЧФЁЭЧгЁЭЧгЁЭЧеЁЭЧвЁЭЧйЁЭЧШ ЁЭЧвЁЭЧЩЁЭЧЩ тЭМ
тХЪтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХЭ

ЁЯФТ ржЕржЯрзЛ ржПржкрзНрж░рзБржн рж╕рж┐рж╕рзНржЯрзЗржо ржмржирзНржз ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ!

ЁЯУЛ ржкрж░рж┐ржмрж░рзНрждржи:
тФгтФБ ржирждрзБржи ржЧрзНрж░рзБржкрзЗ ржорзНржпрж╛ржирзБржпрж╝рж╛рж▓ ржПржкрзНрж░рзБржнрж╛рж▓ ржкрзНрж░ржпрж╝рзЛржЬржи
тФгтФБ ржкрзБрж░рж╛рждржи ржПржкрзНрж░рзБржнржб ржЧрзНрж░рзБржк ржПржЦржирзЛ ржХрж╛ржЬ ржХрж░ржмрзЗ
тФгтФБ ржирждрзБржи ржЧрзНрж░рзБржкрзЗ ржХржорж╛ржирзНржб ржХрж╛ржЬ ржХрж░ржмрзЗ ржирж╛
тФЧтФБ ржПржбржорж┐ржиржжрзЗрж░ ржПржкрзНрж░рзБржнрж╛рж▓ ржжрж┐рждрзЗ рж╣ржмрзЗ

тЪая╕П ржПржЦржи ржирждрзБржи ржЧрзНрж░рзБржкрзЗ ржорзНржпрж╛ржирзБржпрж╝рж╛рж▓ ржПржкрзНрж░рзБржнрж╛рж▓ ржкрзНрж░ржпрж╝рзЛржЬржи!

тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтЬжтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА
ЁЯЪй Made by TOHIDUL
тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтЬжтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА`;

                return api.sendMessage(disableMsg, threadID, messageID);
            }

            case "list":
            case "groups": {
                const approvedGroups = config.AUTO_APPROVE.approvedGroups || [];
                if (approvedGroups.length === 0) {
                    return api.sendMessage("ЁЯУЛ ржХрзЛржирзЛ ржЧрзНрж░рзБржк ржПржкрзНрж░рзБржнржб ржирзЗржЗ!", threadID, messageID);
                }

                let groupsList = `
тХФтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХЧ
  ЁЯУЛ ЁЭЧФЁЭЧгЁЭЧгЁЭЧеЁЭЧвЁЭЧйЁЭЧШЁЭЧЧ ЁЭЧЪЁЭЧеЁЭЧвЁЭЧиЁЭЧгЁЭЧж ЁЯУЛ
тХЪтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХЭ

ЁЯОЙ ржорзЛржЯ ржПржкрзНрж░рзБржнржб ржЧрзНрж░рзБржк: ${approvedGroups.length} ржЯрж┐

`;
                for (let i = 0; i < Math.min(approvedGroups.length, 15); i++) {
                    try {
                        const threadInfo = await api.getThreadInfo(approvedGroups[i]);
                        groupsList += `${i + 1}. ${threadInfo.threadName}\n   ID: ${approvedGroups[i]}\n   рж╕ржжрж╕рзНржп: ${threadInfo.participantIDs.length} ржЬржи\n\n`;
                    } catch {
                        groupsList += `${i + 1}. Unknown Group\n   ID: ${approvedGroups[i]}\n\n`;
                    }
                }

                if (approvedGroups.length > 15) {
                    groupsList += `... ржПржмржВ ржЖрж░рзЛ ${approvedGroups.length - 15} ржЯрж┐ ржЧрзНрж░рзБржк\n\n`;
                }

                groupsList += `тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтЬжтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА\nЁЯЪй Made by TOHIDUL\nтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтЬжтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА`;
                return api.sendMessage(groupsList, threadID, messageID);
            }

            case "status":
            default: {
                const isEnabled = config.AUTO_APPROVE.enabled;
                const totalApproved = (config.AUTO_APPROVE.approvedGroups || []).length;

                const statusMsg = `
тХФтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХЧ
  ЁЯУК ЁЭЧФЁЭЧиЁЭЧзЁЭЧв ЁЭЧФЁЭЧгЁЭЧгЁЭЧеЁЭЧвЁЭЧйЁЭЧШ ЁЭЧжЁЭЧзЁЭЧФЁЭЧзЁЭЧиЁЭЧж ЁЯУК
тХЪтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХЭ

ЁЯФз рж╕рж┐рж╕рзНржЯрзЗржо рж╕рзНржЯрзНржпрж╛ржЯрж╛рж╕: ${isEnabled ? 'тЬЕ ржЪрж╛рж▓рзБ' : 'тЭМ ржмржирзНржз'}

ЁЯУК рждржерзНржп:
тФгтФБ ржПржкрзНрж░рзБржнржб ржЧрзНрж░рзБржк: ${totalApproved} ржЯрж┐
тФгтФБ ржЕржЯрзЛ ржПржкрзНрж░рзБржн: ${isEnabled ? 'рж╕ржХрзНрж░рж┐ржпрж╝ тЬЕ' : 'ржирж┐рж╖рзНржХрзНрж░рж┐ржпрж╝ тЭМ'}
тФгтФБ рж╕рзНржмрж╛ржЧржд ржмрж╛рж░рзНрждрж╛: ${config.AUTO_APPROVE.autoApproveMessage ? 'ржЪрж╛рж▓рзБ тЬЕ' : 'ржмржирзНржз тЭМ'}
тФЧтФБ ржорзНржпрж╛ржирзБржпрж╝рж╛рж▓ ржПржкрзНрж░рзБржнрж╛рж▓: ${isEnabled ? 'ржкрзНрж░ржпрж╝рзЛржЬржи ржирзЗржЗ' : 'ржкрзНрж░ржпрж╝рзЛржЬржи'}

ЁЯОп ржХржорж╛ржирзНржбрж╕ржорзВрж╣:
тФгтФБ /approve on - ржЕржЯрзЛ ржПржкрзНрж░рзБржн ржЪрж╛рж▓рзБ
тФгтФБ /approve off - ржЕржЯрзЛ ржПржкрзНрж░рзБржн ржмржирзНржз
тФгтФБ /approve list - ржПржкрзНрж░рзБржнржб ржЧрзНрж░рзБржк ржжрзЗржЦрзБржи
тФЧтФБ /approve status - ржмрж░рзНрждржорж╛ржи рж╕рзНржЯрзНржпрж╛ржЯрж╛рж╕

${isEnabled ? 
'ЁЯОЙ ржмржЯ ржПржЦржи ржпрзЗржХрзЛржирзЛ ржЧрзНрж░рзБржкрзЗ ржЕржЯрзЛ ржПржкрзНрж░рзБржн ржХрж░ржмрзЗ!' : 
'тЪая╕П ржирждрзБржи ржЧрзНрж░рзБржкрзЗ ржорзНржпрж╛ржирзБржпрж╝рж╛рж▓ ржПржкрзНрж░рзБржнрж╛рж▓ ржкрзНрж░ржпрж╝рзЛржЬржи!'}

тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтЬжтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА
ЁЯЪй Made by TOHIDUL
тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтЬжтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА`;

                return api.sendMessage(statusMsg, threadID, messageID);
            }
        }
    } catch (error) {
        console.error('Approve command error:', error);
        return api.sendMessage("тЭМ ржХрж┐ржЫрзБ ржПржХржЯрж╛ ржнрзБрж▓ рж╣ржпрж╝рзЗржЫрзЗ! ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред", threadID, messageID);
    }
};